#pragma once


#include "ofMain.h"
#include "Poco/RWLock.h"
#include "Poco/Net/TCPServer.h"
#include "Poco/Net/TCPServerParams.h"
#include "Poco/Net/TCPServerConnection.h"
#include "Poco/Net/Socket.h"
#include "ofxTCPPocoUtils.h"


/* ofxTCPPocoConnectionHandler.
 - used by ofxTCPPocoServer to handle connections from clients (threaded)
 - following poco TCPServerConnection interface, object gets generated by a TCPServerConnectionFactory
 - handles receving messages from clients - a new ofxTCPPocoConnectionHandler is created for each client
 - threaded
 
 - TODO:// change this so it only receives a single message at a time - then can update receive size between messages
 // problem is their could be lots of bytes building up waiting
 // and a requires the user to wait for a message as this processes as well as setting the required buffer size
 // might need to change this to the more traditional model: every send, gets a reply - avoids a lot of drama
 // is much less based on ofxNetwork though... hmmm
 */
class ofxTCPPocoConnectionHandler : public Poco::Net::TCPServerConnection {
public:
    
    ofxTCPPocoConnectionHandler(const Poco::Net::StreamSocket& client); // : Poco::Net::TCPServerConnection(client);
    ~ofxTCPPocoConnectionHandler();
    
    // set via connection factory
    int clientId;
    
    
    // thread
    ofMutex mutex;
    void run(); // async thread loop
    
    
    // receiving- non blocking
    // messages are automatically queued in the run loop, use hasWaitingMessages(), and getRawBuffer() to get the messages
    // messages are received one by one
    bool hasWaitingMessage();
    // TODO: receive size needs to be updated if receiving anything larger than TCPPOCO_DEFAULT_MSG_SIZE
    void setReceiveBufferSize(int size); // this need to be configured per message
    void getRawBuffer(ofBuffer& buffer); // pops from receivedBuffers queue
    void flush();
    
    
    // sending- blocking
    bool sendRawBuffer(ofBuffer& buffer);
    bool sendMessage(string& message);
    
    
    // old sending (queued)
    // when sending a message - need to be pushed into queue here
    //void queueRawBuffer(ofBuffer& buffer);
    //queue<ofBuffer> sendBuffers;
    //void getQueuedBuffer(ofBuffer& buffer);
    //bool messagesToSend;
    
    ofEvent<int> closeEvent;
    ofEvent<int> getCloseEvent();
    
    //int sleepTime;
    
protected:
    
    // receive
    bool waitingMessage;
    int defaultMessageSize;
    //queue<ofBuffer> receivedBuffers;
    ofBuffer receiveBuffer;
    int receiveBufferSize;

    // had to add this to avoid server crashing on exit when client closes
    bool markSocketForDelete;
};

